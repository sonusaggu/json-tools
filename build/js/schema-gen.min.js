document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("json-input"),t=document.getElementById("schema-output"),r=document.getElementById("generate-btn"),n=document.getElementById("download-schema"),o=document.getElementById("copy-schema"),i=document.getElementById("include-required"),c=document.getElementById("include-descriptions"),s=document.getElementById("schema-version"),a={productId:1,productName:"Laptop",price:999.99,tags:["electronics","laptop"],dimensions:{length:15,width:10,height:1.5},warehouseLocation:{latitude:-75.143,longitude:40.038}};function l(){const t=e.value.split("\n");let r="";for(let e=0;e<t.length;e++)r+=e+1+"<br>";document.querySelector(".editor-wrapper .line-numbers").innerHTML=r}function d(){const e=t.textContent.split("\n");let r="";for(let t=0;t<e.length;t++)r+=t+1+"<br>";document.querySelector(".result-wrapper .output-line-numbers").innerHTML=r}document.getElementById("sample-data").addEventListener("click",()=>{e.value=JSON.stringify(a,null,2),l()}),document.getElementById("clear-input").addEventListener("click",()=>{e.value="",t.textContent="Schema will appear here...",l(),d()}),r.addEventListener("click",()=>{if(!e.value.trim())return t.textContent="Error: Please enter JSON data first",void d();const r=function(e,t={}){try{if(!e.trim())throw new Error("Input is empty");const r=JSON.parse(e),n={$schema:`http://json-schema.org/${t.schemaVersion||"draft-07"}/schema#`,type:"object",properties:{},required:[]};for(const[e,o]of Object.entries(r)){if(n.properties[e]={},n.properties[e].type=null===o?"null":typeof o,Array.isArray(o)&&o.length>0&&(n.properties[e].type="array",n.properties[e].items={type:typeof o[0]}),"object"==typeof o&&null!==o&&!Array.isArray(o)){n.properties[e].type="object",n.properties[e].properties={};for(const[t,r]of Object.entries(o))n.properties[e].properties[t]={type:typeof r}}t.includeRequired&&n.required.push(e),t.includeDescriptions&&(n.properties[e].description=`Description for ${e}`)}return JSON.stringify(n,null,2)}catch(e){return console.error("Schema generation error:",e),`Error: ${e.message}\n\nPlease check:\n1. Valid JSON format\n2. No trailing commas\n3. Properly quoted property names`}}(e.value,{includeRequired:i.checked,includeDescriptions:c.checked,schemaVersion:s.value});t.textContent=r,d()}),n.addEventListener("click",()=>{const e=t.textContent;if(e&&!e.startsWith("Error:"))try{const t=new Blob([e],{type:"application/schema+json"}),r=URL.createObjectURL(t),n=document.createElement("a");n.href=r,n.download=`schema_${(new Date).getTime()}.json`,document.body.appendChild(n),n.click(),setTimeout(()=>{document.body.removeChild(n),URL.revokeObjectURL(r)},100)}catch(e){console.error("Download failed:",e),alert("Download failed: "+e.message)}else alert("Please generate valid schema first")}),o.addEventListener("click",()=>{const e=t.textContent;e&&!e.startsWith("Error:")?navigator.clipboard.writeText(e).then(()=>{const e=o.querySelector("i");e.classList.replace("far","fas"),setTimeout(()=>e.classList.replace("fas","far"),2e3)}).catch(e=>{console.error("Copy failed:",e),alert("Failed to copy schema to clipboard")}):alert("Please generate valid schema first")}),e.addEventListener("input",l),l(),d()});