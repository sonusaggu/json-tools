document.addEventListener("DOMContentLoaded",function(){const t=document.getElementById("jsonInput"),e=document.getElementById("jsonOutput"),n=document.getElementById("formatBtn"),a=document.getElementById("minifyBtn"),o=document.getElementById("copyBtn"),i=document.getElementById("clearBtn"),s=document.getElementById("sampleBtn"),r=document.getElementById("charCount"),c=document.getElementById("inputLineNumbers"),l={formatted:!0,purpose:"Demonstrate JSON formatting",features:["indentation","syntax highlighting","readability"],details:{indentSize:4,maxLineLength:80,compact:!1},stats:{lines:15,bytes:256,complexity:"medium"}};function d(){const e=t.value.split("\n");let n="";for(let t=0;t<e.length;t++)n+=t+1+"<br>";c.innerHTML=n,m()}function m(){c.scrollTop=t.scrollTop}t.style.paddingLeft="60px",d(),t.addEventListener("scroll",m),t.addEventListener("input",function(){d(),r.textContent=`${t.value.length} characters`}),s.addEventListener("click",function(){try{const n=JSON.stringify(l,null,2);t.value=n,r.textContent=`${n.length} characters`,e.textContent='Click "Format" or "Minify" to process the JSON',d(),t.scrollTop=0,m()}catch(t){console.error("Error loading sample:",t),e.innerHTML=`<span class="invalid">✗ Error loading sample: ${t.message}</span>`}}),i.addEventListener("click",function(){t.value="",e.textContent="Formatted JSON will appear here...",r.textContent="0 characters",d()}),n.addEventListener("click",function(){try{if(!t.value.trim())throw new Error("Input is empty");const n=JSON.parse(t.value),a=JSON.stringify(n,null,4);e.textContent=a}catch(t){e.innerHTML=`<span class="invalid">✗ ${t.message}</span>`}}),a.addEventListener("click",function(){try{if(!t.value.trim())throw new Error("Input is empty");const n=JSON.parse(t.value),a=JSON.stringify(n);e.textContent=a}catch(t){e.innerHTML=`<span class="invalid">✗ ${t.message}</span>`}}),o.addEventListener("click",function(){const t=e.textContent;"Formatted JSON will appear here..."!==t&&'Click "Format" or "Minify" to process the JSON'!==t&&navigator.clipboard.writeText(t).then(()=>{const t=o.querySelector("i");t.classList.remove("far","fa-copy"),t.classList.add("fas","fa-check"),setTimeout(()=>{t.classList.remove("fas","fa-check"),t.classList.add("far","fa-copy")},2e3)}).catch(t=>{console.error("Failed to copy:",t),e.innerHTML='<span class="invalid">✗ Failed to copy to clipboard</span>'})}),window.addEventListener("resize",function(){m()})});